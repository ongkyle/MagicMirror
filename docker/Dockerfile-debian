ARG BUILDER_IMG
FROM ${BUILDER_IMG} as builder
LABEL maintainer="Kyle Ong"

USER root

WORKDIR /opt/magic_mirror

# copy startscripts into container:
COPY scripts/build_info.sh /opt/magic_mirror/
COPY docker/entrypoint.sh /opt/magic_mirror/
COPY --from=builder --chown=node:node /opt/magic_mirror /opt/magic_mirror

# procps, arp-scan and sudo needed for the module MMM-NetworkScanner
# sudo needed for the module MMM-Remote-Control
# sudo needed for cp in entrypoint
ARG GIT_INFO
ARG buildarch
ARG NODE_ENV
ARG DEBIAN_VERSION
RUN set -e; \
    apt-get update; \
    DEBIAN_FRONTEND=noninteractive apt-get -qy --no-install-recommends install git nano sudo gettext-base openssl ca-certificates wget tini gnupg; \
    DEBIAN_FRONTEND=noninteractive apt-get -qy --no-install-recommends install ${_pck}; \
    DEBIAN_FRONTEND=noninteractive apt-get -qy remove gnupg; \
    apt-get clean; \
    rm -rf /var/lib/apt/lists/*; \
    usermod -a -G video node; \
    echo "node ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers; \
    chmod +x *.sh; \
    chown node:node build_info.sh; \
    c_rehash; \
    ./build_info.sh "Runtime" "$GIT_INFO"; \
    rm -f build_info.sh;

USER node

ARG NODE_ENV
ENV ELECTRON_DISABLE_SANDBOX=1 \
    ELECTRON_DISABLE_GPU=1 \
    DBUS_SESSION_BUS_ADDRESS="unix:path=/var/run/dbus/system_bus_socket" \
    NODE_ENV=${NODE_ENV} \
    MM_OVERRIDE_DEFAULT_MODULES=true \
    MM_OVERRIDE_CSS=true

EXPOSE 8080

ENTRYPOINT ["/usr/bin/tini", "--", "./entrypoint.sh"]
