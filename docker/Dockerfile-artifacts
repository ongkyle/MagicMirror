ARG NODE_VERSION
ARG PYTHON_VERSION

FROM nikolaik/python-nodejs:python${PYTHON_VERSION}-nodejs${NODE_VERSION}-slim as builder 

WORKDIR /opt/magic_mirror

COPY scripts/build_info.sh /tmp

ADD . ./

ENV PYTHONUNBUFFERED=1
ENV ENV PIP_NO_CACHE_DIR=False

RUN set -e; \
    if [ -z "${debug}" ]; then \
      npmargs="--omit=dev"; \
      if [ -z "${buildarch}" ]; then \
        npmargs="${npmargs} --omit=optional"; \
      elif [ "${buildarch}" = "arm32v7/" ]; then \
        npmargs="${npmargs} --arch=armv7l"; \
      elif [ "${buildarch}" = "arm64v8/" ]; then \
        npmargs="${npmargs} --arch=arm64"; \
      fi; \
    fi; \
    echo "now installing dalai"; \
    python3 -m venv ~/venv; \
    . ~/venv/bin/activate; \
    pip3 install -r requirements.txt; \
    echo "now executing npm install dalai --ignore-scripts ${npmargs}"; \
    npm install dalai --ignore-scripts ${npmargs} ;

RUN set -e; \
    chmod +x /tmp/build_info.sh

ARG GIT_INFO
ARG buildarch
ARG debug
RUN set -e; \
    node -v; \
    if [ -z "${debug}" ]; then \
      npmargs="--omit=dev"; \
      if [ -z "${buildarch}" ]; then \
        npmargs="${npmargs} --omit=optional"; \
      elif [ "${buildarch}" = "arm32v7/" ]; then \
        npmargs="${npmargs} --arch=armv7l"; \
      elif [ "${buildarch}" = "arm64v8/" ]; then \
        npmargs="${npmargs} --arch=arm64"; \
      fi; \
    fi; \
    echo "now executing: npm install ${npmargs}"; \
    npm install ${npmargs}; \
    cat package.json; \
    sed -i "s:address\: \"localhost\":address\: \"0.0.0.0\":" config/config.js.sample; \
    sed -i "s:ipWhitelist\: \[.*\],:ipWhitelist\: \[\],:" config/config.js.sample; \
    mkdir mount_ori; \
    mv modules mount_ori/; \
    mv config mount_ori/; \
    mv css mount_ori/; \
    # remove not needed node_modules stuff
    cp /tmp/build_info.sh .; \
    ./build_info.sh "Artifacts" "$GIT_INFO"; \
    rm -f build_info.sh;

FROM scratch
LABEL maintainer="Kyle Ong"

COPY --from=builder /opt/magic_mirror /opt/magic_mirror
