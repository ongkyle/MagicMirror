ARG NODE_VERSION
ARG DEBIAN_VERSION
ARG GIT_INFO
ARG NODE_ENV
ARG DEBIAN_VERSION

FROM node:${NODE_VERSION}-${DEBIAN_VERSION} as builder

ENV PYTHONUNBUFFERED=1
ENV ENV PIP_NO_CACHE_DIR=False

WORKDIR /opt/magic_mirror

COPY scripts/build_info.sh /opt/magic_mirror/
COPY docker/entrypoint.sh /opt/magic_mirror/
ADD . ./

RUN set -e; \
    chmod +x ./build_info.sh; \
    chmod +x ./entrypoint.sh;

RUN set -e; \
    node -v; \
    echo "now executing: npm install ${npmargs}"; \
    npm install ${npmargs}; \
    sed -i "s:address\: \"localhost\":address\: \"0.0.0.0\":" config/config.js.sample; \
    sed -i "s:ipWhitelist\: \[.*\],:ipWhitelist\: \[\],:" config/config.js.sample; \
    mkdir mount_ori; \
    mv modules mount_ori/; \
    mv config mount_ori/; \
    mv css mount_ori/; \
    # remove not needed node_modules stuff
    ./build_info.sh "Artifacts" "$GIT_INFO"; 

RUN set -e; \
    apt-get update ; \
    apt-get install -y software-properties-common  ; \
    apt-get -y update ; \
    add-apt-repository ppa:deadsnakes/ppa ;\
    apt-get update -y ;\
    apt-get install -y python3.10 python3-pip python3-venv; \
    rm -rf /var/lib/apt/lists/*

RUN set -e; \
    pip3 install --upgrade pip; \ 
    echo "now installing dalai dependencies"; \
    python3 -m venv ~/venv; \
    . ~/venv/bin/activate; \
    pip3 install -r requirements.txt; \
    echo "now executing npm install dalai --ignore-scripts ${npmargs}"; \
    npm install dalai@0.3.1 --ignore-scripts ${npmargs} ; \ 

# procps, arp-scan and sudo needed for the module MMM-NetworkScanner
# sudo needed for the module MMM-Remote-Control
# sudo needed for cp in entrypoint

RUN set -e; \
    apt-get update; \
    DEBIAN_FRONTEND=noninteractive apt-get -qy --no-install-recommends install git nano sudo gettext-base openssl ca-certificates wget tini gnupg; \
    DEBIAN_FRONTEND=noninteractive apt-get -qy --no-install-recommends install ${_pck}; \
    DEBIAN_FRONTEND=noninteractive apt-get -qy remove gnupg; \
    apt-get clean; \
    rm -rf /var/lib/apt/lists/*; \
    usermod -a -G video node; \
    echo "node ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers; \
    chmod +x *.sh; \
    chown node:node build_info.sh; \
    c_rehash; \
    ./build_info.sh "Runtime" "$GIT_INFO"; \
    rm -f build_info.sh;

USER node

ENV ELECTRON_DISABLE_SANDBOX=1 \
    ELECTRON_DISABLE_GPU=1 \
    DBUS_SESSION_BUS_ADDRESS="unix:path=/var/run/dbus/system_bus_socket" \
    NODE_ENV=${NODE_ENV} \
    MM_OVERRIDE_DEFAULT_MODULES=true \
    MM_OVERRIDE_CSS=true

EXPOSE 8080

ENTRYPOINT ["/usr/bin/tini", "--", "./entrypoint.sh"]

